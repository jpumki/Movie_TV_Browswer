{"ast":null,"code":"var _jsxFileName = \"/Users/jpumki/Documents/netflix/src/Routes/TV/TVPresenter.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nconst Container = styled.div`\n  padding: 0px 20px;\n`;\n\nconst TVPresenter = ({\n  topRated,\n  popular,\n  airingToday,\n  loading,\n  error\n}) => loading ? /*#__PURE__*/React.createElement(Loader, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }\n}) : /*#__PURE__*/React.createElement(Container, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }\n}, topRated && topRated.length > 0 && /*#__PURE__*/React.createElement(Section, {\n  title: \"Top Rated Shows\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }\n}, topRated.map(show => /*#__PURE__*/React.createElement(Poster, {\n  key: show.id,\n  id: show.id,\n  imageUrl: show.poster_path,\n  title: show.original_name,\n  rating: show.vote_average,\n  year: show.release_date && show.release_date.substring(0, 4),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 13\n  }\n}))), popular && popular.length > 0 && /*#__PURE__*/React.createElement(Section, {\n  title: \"Popular Shows\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }\n}, popular.map(show => /*#__PURE__*/React.createElement(Poster, {\n  key: show.id,\n  id: show.id,\n  imageUrl: show.poster_path,\n  title: show.original_name,\n  rating: show.vote_average,\n  year: show.release_date && show.release_date.substring(0, 4),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 13\n  }\n}))), airingToday && airingToday.length > 0 && /*#__PURE__*/React.createElement(Section, {\n  title: \"Airing Today\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }\n}, airingToday.map(show => /*#__PURE__*/React.createElement(Poster, {\n  key: show.id,\n  id: show.id,\n  imageUrl: show.poster_path,\n  title: show.original_name,\n  rating: show.vote_average,\n  year: show.release_date && show.release_date.substring(0, 4),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 13\n  }\n}))), error && /*#__PURE__*/React.createElement(Message, {\n  color: \"#e74c3c\",\n  text: error,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 17\n  }\n}));\n\nTVPresenter.prototype = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\nexport default TVPresenter;","map":{"version":3,"sources":["/Users/jpumki/Documents/netflix/src/Routes/TV/TVPresenter.js"],"names":["React","PropTypes","styled","Section","Loader","Message","Poster","Container","div","TVPresenter","topRated","popular","airingToday","loading","error","length","map","show","id","poster_path","original_name","vote_average","release_date","substring","prototype","array","bool","isRequired","string"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n  padding: 0px 20px;\n`;\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) =>\n  loading ? (\n    <Loader />\n  ) : (\n    <Container>\n      {topRated && topRated.length > 0 && (\n        <Section title=\"Top Rated Shows\">\n          {topRated.map((show) => (\n            <Poster\n              key={show.id}\n              id={show.id}\n              imageUrl={show.poster_path}\n              title={show.original_name}\n              rating={show.vote_average}\n              year={show.release_date && show.release_date.substring(0, 4)}\n            />\n          ))}\n        </Section>\n      )}\n      {popular && popular.length > 0 && (\n        <Section title=\"Popular Shows\">\n          {popular.map((show) => (\n            <Poster\n              key={show.id}\n              id={show.id}\n              imageUrl={show.poster_path}\n              title={show.original_name}\n              rating={show.vote_average}\n              year={show.release_date && show.release_date.substring(0, 4)}\n            />\n          ))}\n        </Section>\n      )}\n      {airingToday && airingToday.length > 0 && (\n        <Section title=\"Airing Today\">\n          {airingToday.map((show) => (\n            <Poster\n              key={show.id}\n              id={show.id}\n              imageUrl={show.poster_path}\n              title={show.original_name}\n              rating={show.vote_average}\n              year={show.release_date && show.release_date.substring(0, 4)}\n            />\n          ))}\n        </Section>\n      )}\n      {error && <Message color=\"#e74c3c\" text={error} />}\n    </Container>\n  );\n\nTVPresenter.prototype = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default TVPresenter;\n"]},"metadata":{},"sourceType":"module"}