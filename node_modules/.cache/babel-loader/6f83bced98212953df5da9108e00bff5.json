{"ast":null,"code":"var _jsxFileName = \"/Users/jpumki/Documents/netflix/src/Routes/Search/SearchPresenter.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"Components/Loader\";\nimport Section from \"Components/Section\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nconst Container = styled.div`\n  padding: 0px 20px;\n`;\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  loading,\n  searchTerm,\n  handleSubmit,\n  error,\n  updateTerm\n}) => /*#__PURE__*/React.createElement(Container, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Form, {\n  onSubmit: handleSubmit,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Input, {\n  placeholder: \"Search Movies or TV Shows...\",\n  value: searchTerm,\n  onChange: updateTerm,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 7\n  }\n})), loading ? /*#__PURE__*/React.createElement(Loader, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 7\n  }\n}) : /*#__PURE__*/React.createElement(React.Fragment, null, movieResults && movieResults.length > 0 && /*#__PURE__*/React.createElement(Section, {\n  title: \"Movie Results\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 11\n  }\n}, movieResults.map(movie => /*#__PURE__*/React.createElement(Poster, {\n  key: movie.id,\n  id: movie.id,\n  imageUrl: movie.poster_path,\n  title: movie.original_title,\n  rating: movie.vote_average,\n  year: movie.release_date && movie.release_date.substring(0, 4),\n  isMovie: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 15\n  }\n}))), tvResults && tvResults.length > 0 && /*#__PURE__*/React.createElement(Section, {\n  title: \"TV Show Results\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 11\n  }\n}, tvResults.map(show => /*#__PURE__*/React.createElement(Poster, {\n  key: show.id,\n  id: show.id,\n  imageUrl: show.poster_path,\n  title: show.original_name,\n  rating: show.vote_average,\n  year: show.first_air_date && show.first_air_date.substring(0, 4),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 15\n  }\n}))), error && /*#__PURE__*/React.createElement(Message, {\n  color: \"#e74c3c\",\n  text: error,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 19\n  }\n}), tvResults && movieResults && tvResults.length === 0 && movieResults.length === 0 && /*#__PURE__*/React.createElement(Message, {\n  text: \"Nothing found\",\n  color: \"#95a5a6\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 13\n  }\n})));\n\nSearchPresenter.prototype = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  searchTerm: PropTypes.string,\n  error: PropTypes.string,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTermm: PropTypes.func.isRequired\n};\nexport default SearchPresenter;","map":{"version":3,"sources":["/Users/jpumki/Documents/netflix/src/Routes/Search/SearchPresenter.js"],"names":["React","PropTypes","styled","Loader","Section","Message","Poster","Container","div","Form","form","Input","input","SearchPresenter","movieResults","tvResults","loading","searchTerm","handleSubmit","error","updateTerm","length","map","movie","id","poster_path","original_title","vote_average","release_date","substring","show","original_name","first_air_date","prototype","array","bool","isRequired","string","func","updateTermm"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"Components/Loader\";\nimport Section from \"Components/Section\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n  padding: 0px 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  loading,\n  searchTerm,\n  handleSubmit,\n  error,\n  updateTerm,\n}) => (\n  <Container>\n    <Form onSubmit={handleSubmit}>\n      <Input\n        placeholder=\"Search Movies or TV Shows...\"\n        value={searchTerm}\n        onChange={updateTerm}\n      />\n    </Form>\n    {loading ? (\n      <Loader />\n    ) : (\n      <>\n        {movieResults && movieResults.length > 0 && (\n          <Section title=\"Movie Results\">\n            {movieResults.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {tvResults && tvResults.length > 0 && (\n          <Section title=\"TV Show Results\">\n            {tvResults.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n        {tvResults &&\n          movieResults &&\n          tvResults.length === 0 &&\n          movieResults.length === 0 && (\n            <Message text=\"Nothing found\" color=\"#95a5a6\" />\n          )}\n      </>\n    )}\n  </Container>\n);\n\nSearchPresenter.prototype = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  searchTerm: PropTypes.string,\n  error: PropTypes.string,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTermm: PropTypes.func.isRequired,\n};\n\nexport default SearchPresenter;\n"]},"metadata":{},"sourceType":"module"}